buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'org.parchmentmc.librarian.forgegradle'

group = 'tfc'
version = '1.0-SNAPSHOT'

java {
    archivesBaseName = 'smallerunits'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

minecraft {
    // The mappings can be changed at any time and must be in the following format.
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly.
    // stable     #          Stables are built at the discretion of the MCP team.
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings.
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-default mappings at your own risk. They may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
//    mappings channel: 'official', version: '1.18.1'
//    mappings channel: 'parchment', version: '1.18.1-2022.03.06-1.18.1'
    mappings channel: 'parchment', version: '1.18.1-2022.03.06-1.18.2'

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'smallerunits', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "smallerunits.refmap.json"
    config "smallerunits.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url = "https://jitpack.io" }
    maven { url "https://www.cursemaven.com" }
}

configurations {
    api
}

dependencies {
//    minecraft 'net.minecraftforge:forge:1.18.1-39.1.2'
    minecraft 'net.minecraftforge:forge:1.18.2-40.1.19'

    api fg.deobf("curse.maven:ttc-467136:3882273")

    api fg.deobf("curse.maven:framedblocks-441647:3805861")

    api fg.deobf("curse.maven:create-328085:3737418")

    api fg.deobf("curse.maven:flywheel-486392:3737402")

    api fg.deobf("curse.maven:chisel_and_bits-231095:3775218")

    api fg.deobf("curse.maven:pehkui-319596:3808012")

    api fg.deobf("curse.maven:scm-248619:3670826")
    api fg.deobf("curse.maven:tklib-566563:3650390")

    api fg.deobf("curse.maven:spark-361579:3670050")

    api fg.deobf("curse.maven:supplementaries-412082:3800501")
    api fg.deobf("curse.maven:selene-499980:3802427")
    api fg.deobf("curse.maven:immweather-592449:3800547")

    api fg.deobf("curse.maven:betterlilies-626812:3808620")

    api fg.deobf("curse.maven:curios-309927:3748873")
    api fg.deobf("curse.maven:malum-484064:3788643")
    api fg.deobf("curse.maven:ortuslib-616457:3768197")

    api fg.deobf("curse.maven:botania-225643:3789677")
    api fg.deobf("curse.maven:patchouli-306770:3809545")

//    api fg.deobf("curse.maven:shimmer-627824:3806634")

//    if (new File("run/libs/ttc-deobf.jar").exists()) {
//        api files("run/libs/ttc-deobf.jar")
//    }

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    configurations.compileOnly.extendsFrom(configurations.api)
    configurations.runtimeOnly.extendsFrom(configurations.api)
}

jar {
    //noinspection GroovyAssignabilityCheck
    manifest {
        attributes([
                "Specification-Title"     : "smallerunits",
                "Specification-Vendor"    : "GiantLuigi4",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "GiantLuigi4",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
