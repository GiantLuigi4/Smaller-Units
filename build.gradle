buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
        mavenCentral()
        maven { url 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'java'

version = modVersion
group = modGroup
archivesBaseName = modBaseName

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: 'snapshot', version: '20201028-1.16.3'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=smaller_units.mixins.json"

//            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=smaller_units.mixins.json"

//            property 'mixin.env.disableRefMap', 'true'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'smallerunits', '--all', '--output', file('src/generated/resources/')

            mods {
                smallerunits {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven { url "https://repo.spongepowered.org/repository/maven-public/" }
    maven { url 'https://jitpack.io' }
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    maven { url "https://www.cursemaven.com" }
}

dependencies {
    // Specify the version of Minecraft to use, If this is any group other then 'net.minecraft' it is assumed
    // that the dep is a ForgeGradle 'patcher' dependency. And it's patches will be applied.
    // The userdev artifact is a special name and will get all sorts of transformations applied to it.
//    minecraft 'net.minecraftforge:forge:1.16.4-35.1.37'
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.0'

//    runtimeOnly fg.deobf('com.github.LOLatom:DeltaLib:af0fbfd07d')
//    compile fg.deobf("com.jozufozu.flywheel:Flywheel:1.16-0.2.4")
    compile fg.deobf('curse.maven:flywheel-486392:3535459') // heck with maven, just cursemaven it

//    runtimeOnly fg.deobf('curse.maven:reauth-237701:3105779')
    runtimeOnly fg.deobf('curse.maven:reauth-513857:3507476')
    runtimeOnly fg.deobf('curse.maven:worldmanipulation-414161:3096407')
    runtimeOnly fg.deobf('curse.maven:jei-238222:3383214')
    runtimeOnly fg.deobf('curse.maven:carryon-274259:3206755')
    runtimeOnly fg.deobf('curse.maven:storagedrawers-223852:3180569')
    runtimeOnly fg.deobf('curse.maven:quark-243121:3393195')
    runtimeOnly fg.deobf('curse.maven:oddities-301051:3088871')
    runtimeOnly fg.deobf('curse.maven:autoreglib-250363:3326041')
    runtimeOnly fg.deobf('curse.maven:appeng-223794:3354897')
    compile fg.deobf('curse.maven:refinedstorage-243076:3196167')
//    runtimeOnly fg.deobf('curse.maven:pymtech-316946:3163217')
    runtimeOnly fg.deobf('curse.maven:compactstorage-223703:3209571')
    runtimeOnly fg.deobf('curse.maven:mekanism-268560:3183270')
    runtimeOnly fg.deobf('curse.maven:fluxnetworks-248020:3174798')
    runtimeOnly fg.deobf('curse.maven:xnet-260912:3140153')
    runtimeOnly fg.deobf('curse.maven:mcjtylib-233105:3194349')
    runtimeOnly fg.deobf('curse.maven:rftoolsbase-326041:3206945')

    // if I use old create, I need to use old C&B
    runtimeOnly fg.deobf('curse.maven:chiselandbits-231095:3234842')
    compile fg.deobf('curse.maven:create-328085:3278516')
//    runtimeOnly fg.deobf('curse.maven:chiselandbits-231095:3510598')
//    compile fg.deobf('curse.maven:create-328085:3536025') //3278516

//    runtimeOnly fg.deobf('curse.maven:botania-225643:3175663')
    runtimeOnly fg.deobf('curse.maven:patchouli-306770:3204037')
    runtimeOnly fg.deobf('curse.maven:framedblocks-441647:3499681')
    runtimeOnly fg.deobf('curse.maven:curios-309927:3186427')
    runtimeOnly fg.deobf('curse.maven:integrated_dyanmics-236307:3376007')
    runtimeOnly fg.deobf('curse.maven:common_capabilities-247007:3292062')
    runtimeOnly fg.deobf('curse.maven:cyclops_core-232758:3336467')
    runtimeOnly fg.deobf('curse.maven:redstone_pen-461710:3348960')
    runtimeOnly fg.deobf('curse.maven:ctm-267602:3137659')
    runtimeOnly fg.deobf('curse.maven:tiny_redstone-453746:3347318')

//    compile fg.deobf('curse.maven:pokecube-285121:3308917')

    compileOnly fg.deobf('curse.maven:charm-430988:3214651')

    compileOnly fg.deobf('curse.maven:shrink-426386:3352335')
    compileOnly fg.deobf('curse.maven:threecore-349285:3187033')
    compileOnly fg.deobf('curse.maven:gullivern-385915:3227241')
//    compile fg.deobf('curse.maven:pehkui_old-319596:3351969')
    compile fg.deobf('curse.maven:pehkui_new-319596:3545512')
    compile fg.deobf('curse.maven:the_one_probe-245211:3319255')
    compileOnly fg.deobf("curse.maven:better_fps_graph-399699:3094889")

//    runtimeOnly fg.deobf("curse.maven:supplementaries-412082:3544548")
//    runtimeOnly fg.deobf("curse.maven:selene-499980:3517008")

//    compileOnly 'com.github.GiantLuigi4:CollisionReversion:c42cc51c7f'
//    compileOnly 'com.github.GiantLuigi4:CollisionReversion:c7b1d4f020'
    // currently forge gradle does not work with jitpack
    // in order to get collision reversion to load in dev envro, I had to build it without remapping it
    // then use the files dependency type to load it in
    compile files('CollisionReversion-1.0-SNAPSHOT.zip')
//    compile fg.deobf('com.github.GiantLuigi4:CollisionReversion:08cf9671bf')
    compile fg.deobf('curse.maven:hwyla-3033613:3033593')

    // this will only exist while vivecraft does not have an api which is meant to be used
    // I did this for sake of getting a sense on how to do vivecraft support, and as a for the time being thing
    // as soon as vivecraft has a proper api, I am removing this and using that
    compile files("vivecraft_compiletime_api.jar")

    compile 'org.spongepowered:mixin:0.8'
}

apply plugin: 'org.spongepowered.mixin'

minecraft {
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
}

mixin {
    add sourceSets.main, "smaller_units.refmap.json"
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "smallerunits",
                "Specification-Vendor": "GiantLuigi4",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.version,
                "Implementation-Vendor": "GiantLuigi4",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                // Existing properties here
                "MixinConfigs": "smaller_units.mixins.json"
        ])
    }
}
