plugins {
    id 'fabric-loom' version '1.1-SNAPSHOT'
    id 'maven-publish'

}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    accessWidenerPath = file("src/main/resources/smallerunits.accesswidener")
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url "https://cursemaven.com" }
    maven {
        name = 'Ladysnake Mods'
        url = 'https://ladysnake.jfrog.io/artifactory/mods'
    }
    maven {
        name = "JitPack"
        url = "https://jitpack.io"
        content {
            includeGroup "com.github.Virtuoel"
        }
    }
    maven {
        url "https://maven.jamieswhiteshirt.com/libs-release"
        content {
            includeGroup "com.jamieswhiteshirt"
        }
    }
}

String ccaVersion = "4.2.0"
String[] ccaModules = new String[]{
        "chunk",
        "world",
        "entity"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:" + ccaVersion
    for (String module : ccaModules) modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-" + module + ":" + ccaVersion

    modImplementation "curse.maven:alternate_current-548115:4406078"
    modImplementation "curse.maven:pehkui-319596:4408057"
    modImplementation "curse.maven:chiselandbits-561059:4119189"
    modImplementation "curse.maven:bitsandchisel-420709:3841573"

    modImplementation "curse.maven:sodium-394468:3669187"
    modImplementation "curse.maven:indium-459496:3911811"
    implementation 'org.joml:joml:1.10.2'

    modCompileOnly "curse.maven:vivecraft-667903:4409424"
    modCompileOnly "curse.maven:vfe-325360:3893747" // TODO: is there a fabric equivalent?

    modImplementation("com.github.Virtuoel:KanosConfig:0.3.1", {
        exclude group: "net.fabricmc", module: "fabric-loader"
        exclude group: "net.fabricmc.fabric-api"
    })

//    include modImplementation("com.jamieswhiteshirt:reach-entity-attributes:2.3.1")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}